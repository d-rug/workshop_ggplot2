[["index.html", "Data Visualization in R using ggplot2 Overview", " Data Visualization in R using ggplot2 Wesley Brooks 2023-02-14 Overview YOUR DESCRIPTION, LEARNING GOALS, PREREQUISITES, ETC "],["introduction.html", "1 Introduction", " 1 Introduction ggplot2 is an enormously popular R package that provides a way to create data visualizations through a so-called “grammar of graphics” (hence the “gg” in the name). That grammar interface may be a little bit unintuitive at first but once you grasp it, you hold enormous power to quickly craft plots. It doesn’t hurt that the ggplot2 plots look great, too. Today I’ll be teaching you the basics of ggplot2 with a special emphasis on the grammar of graphics. "],["the-grammar-of-graphics.html", "2 The grammar of graphics 2.1 Example: distance to stop a car 2.2 Layers", " 2 The grammar of graphics The grammar of graphics breaks the elements of statistical graphics into parts in an analogy to human language grammars. Knowing how to put together subject nouns, object nouns, verbs, and adjectives allows you to construct sentences that express meaning. Similarly, the grammar of graphics is a collection of layers and the rules for putting them together to graphically express the meaning of your data. ggplot2 is a software tool that understands ideas expressed in the grammar of graphics and can draw the requested picture. Ideas in the grammar of graphics are expressed in layers. The most basic layer is the data itself, and there is an aesthetic layer that describes how data maps onto dimensions like color, x/y coordinates, and size. This layer is distinct from the geometry layer, which describes the way that data should be drawn (e.g., dots, lines, or bars). There are other kinds of layers, but many plots can be specified as the combination of data, aesthetic mapping, and geometry. Let’s see one. 2.1 Example: distance to stop a car One of the datasets built into R is an experiment from the 1920s that measured how far (in feet) cars needed to stop from speeds of 4-25 miles per hour. # load the data and attack the ggplot2 package data(cars) library( ggplot2 ) # look at the data - it is tidy head( cars ) ## speed dist ## 1 4 2 ## 2 4 10 ## 3 7 4 ## 4 7 22 ## 5 8 16 ## 6 9 10 # make a simple plot of the data ggplot(cars) + aes(x=speed, y=dist) + geom_point() 2.2 Layers Layers are the building blocks of the grammar of graphics. There aren’t even that many of them! Here is the list, and the name of the function(s) you’ll use to control the layer. Some of the names include asterisks because there are a lot of similar options - for instance, geometry layers include geom_point(), geom_line(), geom_boxplot(), and many more. See the comprehensive listing on the official ggplot2 website. Data (ggplot2()) - provides the data for the visualization. Aesthetics (aes()) - a mapping that indicates which variables in the data control which dimension in the plot (here “dimension” is used in an abstract way to include things like shape, color, and line width.) Geometry (geom_*()) - how the abstract dimensions of the aesthetic layer will be drawn in the figure. Statistical transform (stat_*()) - alters the data before it enters the aesthetics layer - for instance binning or removing duplicates. Scale (scale_*()) - used to control the way that values in the data are mapped to the aesthetic dimensions. For instance, you can control how numbers or categories in the data map to colors. Coordinates (coord_*()) - used to control how the data are mapped to plot axes. Facets (facet_*()) - used to control how data are separated into subplots called “facets”. Theme (theme()) - used to control plot details like titles, labels, and legends. "],["guidelines-for-graphics.html", "3 Guidelines for graphics 3.1 Data 3.2 Feature types 3.3 Theme guidelines 3.4 Scale guidelines 3.5 Facet guidelines 3.6 Example, revisited", " 3 Guidelines for graphics I’ve attached a PDF checklist for creating good data visualizations, reated by Nick Ulle of UC Davis Datalab. Download it and keep a copy around - it’s an excellent guide. I’m going to go over how the checklist translates into the grammar of graphics. 3.1 Data You can’t have a data visualization without data! ggplot2 expects that your data is tidy, which means that each row is a complete observation and each column is a unique feature. In fact, ggplot2 is part of an actively developing collection of packages called the tidyverse that provides ways to create and work with tidy data. You dont have to adopt the entire tidyverse to use ggplot2, though. 3.2 Feature types The first item on the list is a table of options for geometries that are commonly relevant for a given kind of data - for instance, a histogram is a geometry that can be used with a single numeric feature, and a box plot can be used with one numeric and one categorical feature. - Should it be a dot plot? Pie plots are hard to read and bar plots don’t use space efficiently (Cleveland and McGill 1990; Heer and Bostock 2010). Generally a dot plot is a better choice. 3.3 Theme guidelines Does the graphic convey important information? Don’t include graphics that are uninformative or redundant. Title? Make sure the title explains what the graphic shows. Axis labels? Label the axes in plain language (no variable names!). Axis units? Label the axes with units (inches, dollars, etc). Legend? Any graphic that shows two or more categories coded by style or color must include a legend. 3.4 Scale guidelines Appropriate scales and limits? Make sure the scales and limits of the axes do not lead people to incorrect conclusions. For side-by-side graphics or graphics that viewers will compare, use identical scales and limits. Print safe? Design graphics to be legible in black &amp; white. Color is great, but use point and line styles to distinguish groups in addition to color. Also try to choose colors that are accessible to colorblind people. The RColorBrewer and viridis packages can help with choosing colors. 3.5 Facet guidelines No more than 5 lines? Line plots with more than 5 lines risk becoming hard-to-read “spaghetti” plots. Generally a line plot with more than 5 lines should be split into multiple plots with fewer lines. If the x-axis is discrete, consider using a heat map instead. No overplotting? Scatter plots where many plot points overlap hide the actual patterns in the data. Consider splitting the data into facets, making the points smaller, or using a two-dimensional density plot (a smooth scatter plot) instead. 3.6 Example, revisited Our earlier example violates some of these rules: it has no title, the axes are labeled with variable names instead of plain language, and the plot units aren’t provided. # create the plot with labels and title ggplot(cars) + aes(x=speed, y=dist) + geom_point() + xlab(&quot;speed (mph)&quot;) + ylab(&quot;stopping distance (feet)&quot;) + ggtitle(&quot;Stopping distance&quot;) "],["examples.html", "4 Examples 4.1 Bird Flu mortality 4.2 Small business loans", " 4 Examples We have covered enough of the grammar of graphics that you should begin to see the patterns in how it is used to express graphical ideas for ggplot2. Here, we will work through some examples. 4.1 Bird Flu mortality 4.2 Small business loans "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
